{"ast":null,"code":"import _slicedToArray from \"/Users/admin/projects/diamonds2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/admin/projects/diamonds2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { useState, useEffect } from \"react\";\nimport useFetchRepeatedly from \"./useFetchRepeatedly\";\nimport _ from \"lodash\";\nvar botGameObjectName = 'BotGameObject';\nvar dummyBotGameObjectName = 'DummyBotGameObject';\nvar diamondGameObjectName = 'DiamondGameObject';\n\nvar createBoard = function createBoard(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      bots = _ref.bots,\n      gameObjects = _ref.gameObjects,\n      diamonds = _ref.diamonds;\n  var rows = [];\n\n  for (var y = 0; y < height; y++) {\n    rows.push([]);\n\n    for (var x = 0; x < width; x++) {\n      rows[y][x] = {};\n    }\n  } // Insert bots into board\n\n\n  gameObjects.filter(function (b) {\n    return b.type === botGameObjectName || b.type === dummyBotGameObjectName;\n  }).forEach(function (bot) {\n    rows[bot.position.y][bot.position.x] = _objectSpread({}, rows[bot.position.y][bot.position.x], {\n      botName: bot.name\n    });\n    rows[bot.properties.base.y][bot.properties.base.x] = _objectSpread({}, rows[bot.properties.base.y][bot.properties.base.x], {\n      base: bot.name\n    });\n  }); // Insert diamonds into board\n\n  gameObjects.filter(function (b) {\n    return b.type === diamondGameObjectName;\n  }).forEach(function (diamond) {\n    rows[diamond.position.y][diamond.position.x] = _objectSpread({}, rows[diamond.position.y][diamond.position.x], {\n      diamond: true,\n      points: diamond.points\n    });\n  }); // Insert gameObjects into board\n\n  gameObjects.forEach(function (go) {\n    rows[go.position.y][go.position.x] = _objectSpread({}, rows[go.position.y][go.position.x], {\n      goName: go.name,\n      go: true\n    });\n  });\n  return rows;\n};\n\nexport default (function (url, delay) {\n  var _useState = useState([[]]),\n      _useState2 = _slicedToArray(_useState, 2),\n      rows = _useState2[0],\n      setRows = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bots = _useState4[0],\n      setBots = _useState4[1];\n\n  var boardData = useFetchRepeatedly(url, delay, {});\n  useEffect(function () {\n    if (!_.isEmpty(boardData)) {\n      setRows(createBoard(boardData));\n      setBots(board.gameObjects.filter(function (b) {\n        return b.type === botGameObjectName || b.type === dummyBotGameObjectName;\n      }));\n    }\n  }, [boardData]);\n  return [rows, bots];\n});","map":{"version":3,"sources":["/Users/admin/projects/diamonds2/frontend/src/hooks/useBoard.js"],"names":["useState","useEffect","useFetchRepeatedly","_","botGameObjectName","dummyBotGameObjectName","diamondGameObjectName","createBoard","width","height","bots","gameObjects","diamonds","rows","y","push","x","filter","b","type","forEach","bot","position","botName","name","properties","base","diamond","points","go","goName","url","delay","setRows","setBots","boardData","isEmpty","board"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,IAAMC,iBAAiB,GAAG,eAA1B;AACA,IAAMC,sBAAsB,GAAG,oBAA/B;AACA,IAAMC,qBAAqB,GAAG,mBAA9B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoD;AAAA,MAAjDC,KAAiD,QAAjDA,KAAiD;AAAA,MAA1CC,MAA0C,QAA1CA,MAA0C;AAAA,MAAlCC,IAAkC,QAAlCA,IAAkC;AAAA,MAA5BC,WAA4B,QAA5BA,WAA4B;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACtE,MAAMC,IAAI,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAApB,EAA4BK,CAAC,EAA7B,EAAiC;AAC/BD,IAAAA,IAAI,CAACE,IAAL,CAAU,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAApB,EAA2BQ,CAAC,EAA5B,EAAgC;AAC9BH,MAAAA,IAAI,CAACC,CAAD,CAAJ,CAAQE,CAAR,IAAa,EAAb;AACD;AACF,GAPqE,CAStE;;;AACAL,EAAAA,WAAW,CAACM,MAAZ,CAAmB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,KAAWf,iBAAX,IAAgCc,CAAC,CAACC,IAAF,KAAUd,sBAA9C;AAAA,GAApB,EAA0Fe,OAA1F,CAAkG,UAAAC,GAAG,EAAI;AACvGR,IAAAA,IAAI,CAACQ,GAAG,CAACC,QAAJ,CAAaR,CAAd,CAAJ,CAAqBO,GAAG,CAACC,QAAJ,CAAaN,CAAlC,sBACKH,IAAI,CAACQ,GAAG,CAACC,QAAJ,CAAaR,CAAd,CAAJ,CAAqBO,GAAG,CAACC,QAAJ,CAAaN,CAAlC,CADL;AAEEO,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFf;AAIAX,IAAAA,IAAI,CAACQ,GAAG,CAACI,UAAJ,CAAeC,IAAf,CAAoBZ,CAArB,CAAJ,CAA4BO,GAAG,CAACI,UAAJ,CAAeC,IAAf,CAAoBV,CAAhD,sBACKH,IAAI,CAACQ,GAAG,CAACI,UAAJ,CAAeC,IAAf,CAAoBZ,CAArB,CAAJ,CAA4BO,GAAG,CAACI,UAAJ,CAAeC,IAAf,CAAoBV,CAAhD,CADL;AAEEU,MAAAA,IAAI,EAAEL,GAAG,CAACG;AAFZ;AAID,GATD,EAVsE,CAqBtE;;AACAb,EAAAA,WAAW,CAACM,MAAZ,CAAmB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,KAAWb,qBAAf;AAAA,GAApB,EAA0Dc,OAA1D,CAAkE,UAAAO,OAAO,EAAI;AAC3Ed,IAAAA,IAAI,CAACc,OAAO,CAACL,QAAR,CAAiBR,CAAlB,CAAJ,CAAyBa,OAAO,CAACL,QAAR,CAAiBN,CAA1C,sBACKH,IAAI,CAACc,OAAO,CAACL,QAAR,CAAiBR,CAAlB,CAAJ,CAAyBa,OAAO,CAACL,QAAR,CAAiBN,CAA1C,CADL;AAEEW,MAAAA,OAAO,EAAE,IAFX;AAGEC,MAAAA,MAAM,EAAED,OAAO,CAACC;AAHlB;AAKD,GAND,EAtBsE,CA8BtE;;AACAjB,EAAAA,WAAW,CAACS,OAAZ,CAAoB,UAAAS,EAAE,EAAI;AACxBhB,IAAAA,IAAI,CAACgB,EAAE,CAACP,QAAH,CAAYR,CAAb,CAAJ,CAAoBe,EAAE,CAACP,QAAH,CAAYN,CAAhC,sBACKH,IAAI,CAACgB,EAAE,CAACP,QAAH,CAAYR,CAAb,CAAJ,CAAoBe,EAAE,CAACP,QAAH,CAAYN,CAAhC,CADL;AAEEc,MAAAA,MAAM,EAAED,EAAE,CAACL,IAFb;AAGEK,MAAAA,EAAE,EAAE;AAHN;AAKD,GAND;AAQA,SAAOhB,IAAP;AACD,CAxCD;;AA0CA,gBAAe,UAACkB,GAAD,EAAMC,KAAN,EAAgB;AAAA,kBACLhC,QAAQ,CAAC,CAAC,EAAD,CAAD,CADH;AAAA;AAAA,MACtBa,IADsB;AAAA,MAChBoB,OADgB;;AAAA,mBAELjC,QAAQ,CAAC,EAAD,CAFH;AAAA;AAAA,MAEtBU,IAFsB;AAAA,MAEhBwB,OAFgB;;AAG7B,MAAMC,SAAS,GAAGjC,kBAAkB,CAAC6B,GAAD,EAAMC,KAAN,EAAa,EAAb,CAApC;AAEA/B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACE,CAAC,CAACiC,OAAF,CAAUD,SAAV,CAAL,EAA2B;AACzBF,MAAAA,OAAO,CAAC1B,WAAW,CAAC4B,SAAD,CAAZ,CAAP;AACAD,MAAAA,OAAO,CAACG,KAAK,CAAC1B,WAAN,CAAkBM,MAAlB,CAAyB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAF,KAAWf,iBAAX,IAAgCc,CAAC,CAACC,IAAF,KAAUd,sBAA9C;AAAA,OAA1B,CAAD,CAAP;AACD;AACF,GALQ,EAKN,CAAC8B,SAAD,CALM,CAAT;AAOA,SAAO,CAACtB,IAAD,EAAOH,IAAP,CAAP;AACD,CAbD","sourcesContent":["import { useState, useEffect } from \"react\";\nimport useFetchRepeatedly from \"./useFetchRepeatedly\";\nimport _ from \"lodash\";\n\nconst botGameObjectName = 'BotGameObject';\nconst dummyBotGameObjectName = 'DummyBotGameObject';\nconst diamondGameObjectName = 'DiamondGameObject';\n\nconst createBoard = ({ width, height, bots, gameObjects, diamonds }) => {\n  const rows = [];\n  for (let y = 0; y < height; y++) {\n    rows.push([]);\n    for (let x = 0; x < width; x++) {\n      rows[y][x] = {};\n    }\n  }\n\n  // Insert bots into board\n  gameObjects.filter(b => b.type === botGameObjectName || b.type=== dummyBotGameObjectName).forEach(bot => {\n    rows[bot.position.y][bot.position.x] = {\n      ...rows[bot.position.y][bot.position.x],\n      botName: bot.name\n    };\n    rows[bot.properties.base.y][bot.properties.base.x] = {\n      ...rows[bot.properties.base.y][bot.properties.base.x],\n      base: bot.name\n    };\n  });\n\n  // Insert diamonds into board\n  gameObjects.filter(b => b.type === diamondGameObjectName).forEach(diamond => {\n    rows[diamond.position.y][diamond.position.x] = {\n      ...rows[diamond.position.y][diamond.position.x],\n      diamond: true,\n      points: diamond.points\n    };\n  });\n\n  // Insert gameObjects into board\n  gameObjects.forEach(go => {\n    rows[go.position.y][go.position.x] = {\n      ...rows[go.position.y][go.position.x],\n      goName: go.name,\n      go: true\n    };\n  });\n\n  return rows;\n};\n\nexport default (url, delay) => {\n  const [rows, setRows] = useState([[]]);\n  const [bots, setBots] = useState([]);\n  const boardData = useFetchRepeatedly(url, delay, {});\n\n  useEffect(() => {\n    if (!_.isEmpty(boardData)) {\n      setRows(createBoard(boardData));\n      setBots(board.gameObjects.filter(b => b.type === botGameObjectName || b.type=== dummyBotGameObjectName));\n    }\n  }, [boardData]);\n\n  return [rows, bots];\n};\n\n"]},"metadata":{},"sourceType":"module"}